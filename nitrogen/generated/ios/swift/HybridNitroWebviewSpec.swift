///
/// HybridNitroWebviewSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridNitroWebviewSpec``
public protocol HybridNitroWebviewSpec_protocol: HybridObject, HybridView {
  // Properties
  var sourceUrl: String { get set }
  var onScriptLoaded: (() -> Void)? { get set }

  // Methods
  
}

/// See ``HybridNitroWebviewSpec``
public class HybridNitroWebviewSpec_base {
  private weak var cxxWrapper: HybridNitroWebviewSpec_cxx? = nil
  public func getCxxWrapper() -> HybridNitroWebviewSpec_cxx {
  #if DEBUG
    guard self is HybridNitroWebviewSpec else {
      fatalError("`self` is not a `HybridNitroWebviewSpec`! Did you accidentally inherit from `HybridNitroWebviewSpec_base` instead of `HybridNitroWebviewSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridNitroWebviewSpec_cxx(self as! HybridNitroWebviewSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the NitroWebview HybridObject.
 * Implement this protocol to create Swift-based instances of NitroWebview.
 * ```swift
 * class HybridNitroWebview : HybridNitroWebviewSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridNitroWebviewSpec = HybridNitroWebviewSpec_protocol & HybridNitroWebviewSpec_base
